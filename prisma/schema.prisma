generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ORGANIZER
  ADMIN
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  password      String
  role          Role           @default(USER)
  profileImage  Json?          @default("{}")
  refreshToken  String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  events        Event[]        @relation("UserEvents")
  registrations registration[]
  organizerRequest organizerRequest? 
}

model Event {
  id          Int      @id @unique @default(autoincrement())
  title       String
  description String
  date        DateTime
  location    String
  images      Json?
  createdBy   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // relations
  user          User           @relation("UserEvents", fields: [createdBy], references: [id], onDelete: Cascade)
  registrations registration[]
}

model registration {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
}

// organizer request

enum status {
  PENDING
  ACCEPTED
  REJECTED
}

model organizerRequest {
  id     Int @id @default(autoincrement())
  userId Int @unique
  status status @default(PENDING)
  overview String?
  resume Json?
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt 

  user User @relation( fields : [userId] , references: [id] , onDelete: Cascade) 
}
